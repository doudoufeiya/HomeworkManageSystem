<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" 
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
  id="WebApp_ID" version="3.0">
  <display-name>Archetype Created Web Application</display-name>
<welcome-file-list>
   <!--  <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file> -->
    <welcome-file>login.jsp</welcome-file>
   <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file> 
  </welcome-file-list>

  <!-- 加载Spring 容器配置 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 设置 Spring 配置文件的路径 -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<!-- 如果需要读取多个xml   可以使用如下形式    读取Spring配置文件，主要有数据库设置、Sqlsession、
  	     借助DI 加载Service、Resource 等资源 -->
  	<param-value>classpath*:spring-*.xml</param-value>
  </context-param>
  
  <!-- 防止Spring 内存溢出 -->
  <listener>
  	<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  	<!-- springmvc  前端控制器配置 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 这里的地址  根据项目中你所写的配置文件地址有关 -->
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<!-- 让servlet 在tomcat 启动时加载 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.woff</url-pattern>
    </servlet-mapping>
	<!-- 使用spirng框架为我们提供的过滤器   实现post乱码处理  -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
