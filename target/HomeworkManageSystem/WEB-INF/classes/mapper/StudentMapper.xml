<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kewen.hms.mapper.StudentMapper">
    <!-- 显示所有学生信息 -->
    <select id="findStudents" resultType="Student">
        select *
        from student
        where 1=1
        <if test="s_name != null and s_name!=''">
            and s_name like concat("%",#{s_name},"%")
        </if>
    </select>
    <!-- 登录查询 -->
    <select id="findPwdById" parameterType="int" resultType="String">
        select s_pwd
        from student
        where s_id = #{s_id}
    </select>
    <!-- 根据名字查询学生信息 -->
    <select id="findStudentByName" parameterType="String" resultType="Student">
        select *
        from student
        where s_name = #{s_name}
    </select>
    <select id="findStudentsNoClass" resultType="Student">
        select *
        from student
        where s_cid is null
           or s_cid = ''
    </select>

    <!-- 修改学生信息 -->
    <update id="updateStudent" parameterType="Student">
        update student
        set s_number = #{s_number},
            s_pwd    = #{s_pwd},
            s_name   = #{s_name},
            s_cid    = #{s_cid},
            s_major  = #{s_major},
            s_phone  = #{s_phone},
            s_sex    = #{s_sex}
        where s_id = #{s_id}
    </update>
    <update id="updateStudentClass">
        update student
        set s_cid = #{classId}
        where s_id = #{studentId}
    </update>
    <update id="updateClassStudent">
        update student
        set s_cid = null
        where s_cid = #{c_id}
    </update>
    <!-- 添加信息 -->
    <insert id="addStudent" parameterType="Student">
        insert into student (s_pwd, s_name, s_number, s_sex, s_phone, s_major, s_points, s_cid)
        values (#{s_pwd}, #{s_name}, #{s_number}, #{s_sex}, #{s_phone}, #{s_major}, #{s_points}, #{s_cid})
    </insert>
    <!-- 根据id删除信息 -->
    <delete id="deleteStudent" parameterType="int">
        delete
        from student
        where s_id = #{s_id}
    </delete>

    <select id="toCommitWorkStudentNames" resultType="string">
        select student.s_name
        from twork
                 left join teacher on teacher.t_id = twork.tw_tid
                 left join lesson on lesson.l_id = teacher.t_lesson
                 left join sc_lesson on sc_lesson.l_id = lesson.l_id
                 left join student on student.s_id = sc_lesson.s_id
        where student.s_id not in (select swork.sw_sid from swork where sw_wid = #{workId})

    </select>
    <select id="getToCommitWorkName" resultType="string">
        SELECT concat(
                   teacher.t_name,
                   "的",
                   twork.tw_name
                       )
        FROM twork
                 LEFT JOIN sc_lesson ON sc_lesson.t_id = twork.tw_tid
                 LEFT JOIN teacher ON teacher.t_id = twork.tw_tid
        WHERE twork.tw_id IN(SELECT DISTINCT twork.tw_id
                             FROM twork
                                      LEFT JOIN swork ON swork.sw_wid = twork.tw_id
                                      LEFT JOIN sc_lesson ON sc_lesson.t_id = twork.tw_tid
                             WHERE sc_lesson.s_id = 1
                               AND twork.tw_id NOT IN(SELECT twork.tw_id
                                                      FROM twork
                                                               LEFT JOIN swork ON swork.sw_wid = twork.tw_id
                                                               LEFT JOIN sc_lesson ON sc_lesson.t_id = twork.tw_tid
                                                               LEFT JOIN teacher ON teacher.t_id = twork.tw_tid
                                                      WHERE swork.sw_sid = #{studentId}
                                                        AND sc_lesson.s_id = #{studentId}))
          AND sc_lesson.s_id = #{studentId}
    </select>

    <insert id="uploadWork">
        insert into swork (sw_name, sw_sid, sw_wid, sw_file_name, sw_file_path, sw_addTime)
        values (#{fileName}, #{studentId}, #{workId}, #{fileName}, #{filePath}, now());
    </insert>

    <select id="findStudentInfoPwdById" resultType="Student">
        select *
        from student
        where s_id = #{s_id}
        limit 1
    </select>
    <select id="findStudentById" resultType="Student">
        select *
        from student
        where s_id = #{s_id}
        limit 1
    </select>
    <select id="findClassStudents" resultType="cn.kewen.hms.pojo.Student">
        select *
        from student
        where s_cid = #{c_id}
    </select>
    <select id="findselectStudents" resultType="cn.kewen.hms.pojo.Student">
        select student.*
        from student
                 left join sc_lesson on student.s_id = sc_lesson.s_id
        where sc_lesson.l_id = #{l_id}
        group by student.s_id
    </select>
    <select id="findStudentsNoLesson" resultType="Student">
        select *
        from student
        where student.s_id not in (select student.s_id
                                   from sc_lesson
                                            left join student on student.s_id = sc_lesson.s_id
                                   where sc_lesson.l_id = #{l_id})
    </select>

    <update id="incrementPoint">
        update student
        set s_points = s_points + 1
    </update>
</mapper>